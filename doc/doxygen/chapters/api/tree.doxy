/* StarPU --- Runtime system for heterogeneous multicore architectures.
 *
 * Copyright (C) 2014, 2016, 2017  CNRS
 *
 * StarPU is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or (at
 * your option) any later version.
 *
 * StarPU is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * See the GNU Lesser General Public License in COPYING.LGPL for more details.
 */

/*! \defgroup API_Tree Tree

\brief This section describes the tree facilities provided by StarPU.

\struct starpu_tree
\ingroup API_Tree
\var struct starpu_tree **starpu_tree::nodes
    todo
\var struct starpu_tree *starpu_tree::father
    todo
\var int starpu_tree::arity
    todo
\var int starpu_tree::id
    todo
\var int starpu_tree::level
    todo
\var int starpu_tree::is_pu
    todo

\fn void starpu_tree_reset_visited(struct starpu_tree *tree, char *visited)
\ingroup API_Tree
todo

\fn void starpu_tree_insert(struct starpu_tree *tree, int id, int level, int is_pu, int arity, struct starpu_tree *father)
\ingroup API_Tree
todo

\fn struct starpu_tree *starpu_tree_get(struct starpu_tree *tree, int id)
\ingroup API_Tree
todo

\fn struct starpu_tree *starpu_tree_get_neighbour(struct starpu_tree *tree, struct starpu_tree *node, char *visited, char *present)
\ingroup API_Tree
todo

\fn void starpu_tree_free(struct starpu_tree *tree)
\ingroup API_Tree
todo

*/
