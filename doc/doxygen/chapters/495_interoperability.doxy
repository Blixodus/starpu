/* StarPU --- Runtime system for heterogeneous multicore architectures.
 *
 * Copyright (C) 2018                                     Inria
 *
 * StarPU is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or (at
 * your option) any later version.
 *
 * StarPU is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * See the GNU Lesser General Public License in COPYING.LGPL for more details.
 */

/*! \page InteroperabilitySupport Interoperability Support

In situations where multiple parallel software elements have to coexist within
the same application, unconcerted accesses to computing units may lead such
parallel software elements to collide and interfere. The purpose of the
Interoperability routines of StarPU, implemented along the definition of the
Resource Management APIs of Project H2020 INTERTWinE, is to enable StarPU to
coexist with other parallel software elements without resulting in computing
core oversubscription or undersubscription. These routines allow the
programmer to dynamically control the computing resources allocated to StarPU,
to add or remove processor cores and/or accelerator devices from the pool of
resources used by StarPU's workers to execute tasks. They also allow multiple
libraries and applicative codes using StarPU simultaneously to select distinct
sets of resources independently. Internally, the Interoperability Support is
built on top of Scheduling Contexts (see \ref SchedulingContexts).

\section ResourceManagement StarPU Resource Management

This section will present the 'starpurm' module.

All functions are defined in \ref API_Interop_Support.

\subsection InitExit Initialization and Shutdown

TODO

*/
