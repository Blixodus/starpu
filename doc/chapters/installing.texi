@c -*-texinfo-*-

@c This file is part of the StarPU Handbook.
@c Copyright (C) 2009--2011  Universit@'e de Bordeaux 1
@c Copyright (C) 2010, 2011, 2012, 2013  Centre National de la Recherche Scientifique
@c Copyright (C) 2011, 2012 Institut National de Recherche en Informatique et Automatique
@c See the file starpu.texi for copying conditions.

@menu
* Downloading StarPU::
* Configuration of StarPU::
* Building and Installing StarPU::
@end menu

StarPU can be built and installed by the standard means of the GNU
autotools. The following chapter is intended to briefly remind how these tools
can be used to install StarPU.

@node Downloading StarPU
@section Downloading StarPU

@menu
* Getting Sources::
* Optional dependencies::
@end menu

@node Getting Sources
@subsection Getting Sources

StarPU's sources can be obtained from the
@url{http://runtime.bordeaux.inria.fr/StarPU/files/,download page} of
the StarPU website.

All releases and the development tree of StarPU are freely available
on INRIA's gforge under the LGPL license. Some releases are available
under the BSD license.

The latest release can be downloaded from the
@url{http://gforge.inria.fr/frs/?group_id=1570,INRIA's gforge} or
directly from the @url{http://runtime.bordeaux.inria.fr/StarPU/files/,StarPU download page}.

The latest nightly snapshot can be downloaded from the @url{http://starpu.gforge.inria.fr/testing/,StarPU gforge website}.

@example
$ wget http://starpu.gforge.inria.fr/testing/starpu-nightly-latest.tar.gz
@end example

And finally, current development version is also accessible via svn.
It should be done only if you need the very latest changes (i.e. less
than a day!)@footnote{The client side of the software Subversion can
be obtained from @url{http://subversion.tigris.org}. If you
are running on Windows, you will probably prefer to use
@url{http://tortoisesvn.tigris.org/, TortoiseSVN}.}.

@example
svn checkout svn://scm.gforge.inria.fr/svn/starpu/trunk StarPU
@end example

@node Optional dependencies
@subsection Optional dependencies

The @url{http://www.open-mpi.org/software/hwloc, @code{hwloc} topology
discovery library} is not mandatory to use StarPU but strongly
recommended.  It allows for topology aware scheduling, which improves
performance.  @code{hwloc} is available in major free operating system
distributions, and for most operating systems.

If hwloc is not available on your system, the option
@code{--without-hwloc} should be explicitely given when calling the
configure script. If hwloc is installed with a @code{pkg-config} file,
no option is required, it will be detected automatically, otherwise
the @code{with-hwloc=prefix} should be used to specify the location
of hwloc.

@node Configuration of StarPU
@section Configuration of StarPU

@menu
* Generating Makefiles and configuration scripts::
* Running the configuration::
@end menu

@node Generating Makefiles and configuration scripts
@subsection Generating Makefiles and configuration scripts

This step is not necessary when using the tarball releases of StarPU.  If you
are using the source code from the svn repository, you first need to generate
the configure scripts and the Makefiles. This requires the
availability of @code{autoconf}, @code{automake} >= 2.60, and @code{makeinfo}.

@example
$ ./autogen.sh
@end example

@node Running the configuration
@subsection Running the configuration

@example
$ ./configure
@end example

Details about options that are useful to give to @code{./configure} are given in
@ref{Compilation configuration}.

By default, the files produced during the compilation are placed in
the source directory. As the compilation generates a lot of files, it
is advised to to put them all in a separate directory. It is then
easier to cleanup, and this allows to compile several configurations
out of the same source tree. For that, simply enter the directory
where you want the compilation to produce its files, and invoke the
configure script located in the StarPU source directory.

@example
$ mkdir build
$ cd build
$ ../configure
@end example

@node Building and Installing StarPU
@section Building and Installing StarPU

@menu
* Building::
* Sanity Checks::
* Installing::
@end menu

@node Building
@subsection Building

@example
$ make
@end example

@node Sanity Checks
@subsection Sanity Checks

Once everything is built, you may want to test the result. An
extensive set of regression tests is provided with StarPU. Running the
tests is done by calling @code{make check}. These tests are run every night
and the result from the main profile is publicly
@url{http://starpu.gforge.inria.fr/testing/,available}.

@example
$ make check
@end example

@node Installing
@subsection Installing

In order to install StarPU at the location that was specified during
configuration:

@example
$ make install
@end example

Libtool interface versioning information are included in
libraries names (libstarpu-1.0.so, libstarpumpi-1.0.so and
libstarpufft-1.0.so).
