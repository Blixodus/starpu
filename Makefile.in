.PHONY: tags drivers examples common core tools tests task-models datawizard
.PHONY: install install-lib install-headers install-pc

export 

exec_prefix = @exec_prefix@
prefix = @prefix@
bindir = @bindir@
libdir = @libdir@
includedir = @includedir@
srcdir = @srcdir@
pcdir = ${libdir}/pkgconfig/

CC=gcc -m64
NVCC = nvcc -m64
NVCCFLAGS += -O3

MKDIR_P =       @MKDIR_P@
INSTALL =       @INSTALL@

CFLAGS += @CPPFLAGS@
CFLAGS += @CFLAGS@
LDFLAGS += @LDFLAGS@
EXTRALDFLAGS += @LIBS@

CFLAGS += -I${PWD}/include/

#CFLAGS += -g -O3
CFLAGS += -W -Wall -Wextra

LDFLAGS+= -lm

ifdef TRANSFER_OVERHEAD
	CFLAGS += -DTRANSFER_OVERHEAD
endif

ifdef PERTURB_AMPL
	CFLAGS+="-DUSE_PERTURBATION"
	CFLAGS+="-DAMPL=$(PERTURB_AMPL)"
endif

ifdef MODEL_DEBUG
	CFLAGS+="-DMODEL_DEBUG "
endif

ifndef SCALPDIR
SCALPDIR=/home/gonnet/Scalp/scalp/trunk/
endif

ifeq (@PERF_DEBUG@,yes)
	CFLAGS += -DPERF_DEBUG
	LDFLAGS += -pg
	CFLAGS += -pg
endif

EXTRADEP=

#Â TODO that should be automatized, somehow
ifdef UNRELIABLETICKS
	CFLAGS += -DUNRELIABLETICKS
endif

ifdef DONTBIND
	CFLAGS += -DDONTBIND
endif

ifdef USE_OVERLOAD
	CFLAGS += -DUSE_OVERLOAD
endif

ifeq (@USE_CUDA@,yes)
	NVCCFLAGS +=  -DUSE_CUDA 
	OBJDEPS += src/drivers/cuda/driver_cuda.o
endif

ifeq (@USE_CPU@,yes)
	NVCCFLAGS += -DUSE_CPUS
	OBJDEPS += src/drivers/core/driver_core.o
endif

ifeq (@USE_GORDON@,yes)
	CFLAGS += -I$(SCALPDIR)
	LDFLAGS += -lspe2
	OBJDEPS += src/drivers/gordon/driver_gordon.o
	EXTRALDFLAGS+= $(SCALPDIR)/cell/gordon/libgordon.a
	EXTRALDFLAGS+= $(SCALPDIR)/util/libsp@ceutil.a
	EXTRALDFLAGS+= $(SCALPDIR)/util/libsp@ceutil.spu.a
endif

ifeq (@USE_FXT@,yes)
	LDFLAGS += -lfxt 
	OBJDEPS += src/common/fxt.o
ifeq (@USE_FXTDIR_FROM_USER@,yes)
	CFLAGS += -I@FXTDIR@/include/
	LDFLAGS += -L@FXTDIR@/lib/
endif
endif

#
#	To create the static and dynamic libraries, we need a list of all the object
#	files that are needed by the application which use our runtime
#

OBJDEPS += src/common/hash.o
OBJDEPS += src/common/timing.o 
OBJDEPS += src/common/htable32.o 
OBJDEPS += src/common/mutex.o
OBJDEPS += src/common/rwlock.o 
OBJDEPS += src/common/malloc.o 
OBJDEPS += src/core/perfmodel/perfmodel.o 
OBJDEPS += src/core/perfmodel/regression.o 
OBJDEPS += src/core/perfmodel/perfmodel_history.o 
OBJDEPS += src/core/jobs.o
OBJDEPS += src/core/workers.o
OBJDEPS += src/core/dependencies/tags.o
OBJDEPS += src/core/dependencies/htable.o
OBJDEPS += src/core/dependencies/data-concurrency.o
OBJDEPS += src/core/mechanisms/queues.o
OBJDEPS += src/core/mechanisms/priority_queues.o
OBJDEPS += src/core/mechanisms/deque_queues.o
OBJDEPS += src/core/mechanisms/fifo_queues.o
OBJDEPS += src/core/policies/sched_policy.o
OBJDEPS += src/core/policies/no-prio-policy.o
OBJDEPS += src/core/policies/eager-central-policy.o
OBJDEPS += src/core/policies/eager-central-priority-policy.o
OBJDEPS += src/core/policies/work-stealing-policy.o
OBJDEPS += src/core/policies/deque-modeling-policy.o
OBJDEPS += src/core/policies/deque-modeling-policy-data-aware.o
OBJDEPS += src/core/policies/random-policy.o
OBJDEPS += src/datawizard/progress.o
OBJDEPS += src/datawizard/copy-driver.o
OBJDEPS += src/datawizard/data_request.o
OBJDEPS += src/datawizard/coherency.o 
OBJDEPS += src/datawizard/hierarchy.o 
OBJDEPS += src/datawizard/write_back.o 
OBJDEPS += src/datawizard/memalloc.o
OBJDEPS += src/datawizard/footprint.o
OBJDEPS += src/datawizard/datastats.o
OBJDEPS += src/datawizard/interfaces/blas_filters.o
OBJDEPS += src/datawizard/interfaces/csr_filters.o
OBJDEPS += src/datawizard/interfaces/bcsr_filters.o
OBJDEPS += src/datawizard/interfaces/vector_filters.o
OBJDEPS += src/datawizard/interfaces/blas_interface.o
OBJDEPS += src/datawizard/interfaces/csr_interface.o
OBJDEPS += src/datawizard/interfaces/bcsr_interface.o
OBJDEPS += src/datawizard/interfaces/vector_interface.o
OBJDEPS += src/task-models/blas_model.o

LIBS=libstarpu.a
ifeq (@DYNAMIC@,yes)
	CFLAGS+= -fPIC
	LIBS+= libstarpu.so
endif

all:
	@make -C src/common
	@make -C src/core
	@make -C src/drivers
	@make -C src/datawizard
	@make -C src/task-models
	@make -C tools

libstarpu.so: all
	gcc --shared -o libstarpu.so $(OBJDEPS)

libstarpu.a: all
	$(AR) rcs $@ $(OBJDEPS)

libs: $(LIBS)

examples: libs
	@make -C examples


HEADERS  = include/starpu.h include/starpu_config.h include/starpu-data-filters.h
HEADERS += include/starpu-data-interfaces.h include/starpu-mutex.h include/starpu-task.h
HEADERS += include/starpu-data.h include/starpu-perfmodel.h include/starpu-util.h

PCFILE=libstarpu.pc

install-pc: $(PCFILE)
	if test ! -d ${pcdir}; then \
		$(MKDIR_P) ${pcdir}; \
	fi
	$(INSTALL) -m 0644 $(PCFILE) ${pcdir}

install-headers: $(HEADERS)
	if test ! -d ${includedir}; then \
		$(MKDIR_P) ${includedir}; \
	fi
	$(INSTALL) -m 0644 $(HEADERS) ${includedir}

install-lib: libs
	if test ! -d ${libdir}; then \
		$(MKDIR_P) ${libdir}; \
	fi
	$(INSTALL) -m 0644 $(LIBS) ${libdir}

install: install-headers install-lib install-pc

uninstall-pc:
	rm -f $(patsubst %,${pcdir}/%,$(PCFILE))

uninstall-headers:
	rm -f $(patsubst include/%,${includedir}/%,$(HEADERS))

uninstall-lib:
	rm -f $(patsubst %,${libdir}/%,$(LIBS))

uninstall: uninstall-headers uninstall-lib uninstall-pc


tags:
	find .|xargs ctags

clean:
	@make -C src/common clean
	@make -C src/core clean
	@make -C src/drivers clean
	@make -C src/datawizard clean
	@make -C src/task-models clean
	@make -C examples clean
	@make -C tools clean
	@rm -f *.so *.a
