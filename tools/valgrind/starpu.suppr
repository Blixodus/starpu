{
   config.running is not racy from starpu_shutdown
   Helgrind:Race
   fun:starpu_shutdown
   ...
}

{
   config.running is not racy from _starpu_machine_is_running
   Helgrind:Race
   fun:_starpu_machine_is_running
   ...
}

{
   don't care about cache hit stats
   Helgrind:Race
   fun:_starpu_msi_cache_hit
   ...
}

{
   don't care about cache miss stats
   Helgrind:Race
   fun:_starpu_msi_cache_miss
   ...
}

{
   known race, but not problematic in practice, see comment in _starpu_tag_clear
   Helgrind:LockOrder
   ...
   fun:_starpu_tag_free
   fun:_starpu_htbl_clear_tags
   ...
   fun:_starpu_tag_clear
   fun:starpu_shutdown
   ...
}


{
   There is actually no race on current_mode, because the mode can not change unexpectedly, until _starpu_notify_data_dependencies() is called further down. Valgrind can not know about such software rwlock.
   Helgrind:Race
   fun:_starpu_release_data_on_node
   fun:_starpu_push_task_output
   ...
}

{
   We do not care about the race on the entry->mean variable, we only want a good-enough estimation.
   Helgrind:Race
   fun:_starpu_history_based_job_expected_perf
   ...
}

{
   We do not care about races on profiling statistics
   Helgrind:Race
   fun:starpu_profiling_status_get
   ...
}

{
   This is racy, but since we'll always put the same values, this is not a problem.
   Helgrind:Race
   fun:_starpu_codelet_check_deprecated_fields
   ...
}

{
   This is racy, but we don't care, it's only a statistic
   Helgrind:Race
   fun:starpu_task_nsubmitted
   ...
}

{
   This is racy, but we don't care, it's only a statistic
   Helgrind:Race
   fun:starpu_task_nready
   ...
}

{
   fscanf error
   Memcheck:Cond
   ...
   fun:fscanf
   fun:_starpu_load_bus_performance_files
   ...
}

{
   This is racy, but we don't care, if the function was called a bit earlier we would have had a different value
   Helgrind:Race
   fun:_starpu_fifo_empty
   fun:pop_task_eager_policy
   ...
}

{
   This is the counterpart of the suppression above
   Helgrind:Race
   fun:_starpu_fifo_push_task
   fun:push_task_eager_policy
   ...
}

