Vérifier que je met bien les taches qui partagent le plus de données ensemble ensemble, la pour le moment je crois que je met juste ensemble celle qui partage 1 données, sans regarder si y en a qui en on 2 en commun.
Tester avec d'autres exemples Marche pour 4 mais pas au dessus STARPU_GENERATE_TRACE=1 STARPU_WORKER_STATS=1 STARPU_NCPU=0 STARPU_NCUDA=1 STARPU_NOPENCL=0 ./examples/mult/sgemm -xy $((960*16)) -nblocks 16 -iter 1
Mettre les noms de variables et fonctions en anglais
Mettre les commentaires en anglais
Enlever les commentaires inutiles

Simplifier le filling :
note dans la partie "Filling" je vois que tu parcours la liste en faisant du pop_front/push_back, il n'y a pas besoin d'enlever les tâches pour parcourir la liste, tu peux utiliser stapru_task_list_begin/end/next, 
voir par exemple dans fifo_queues.c la fonction _starpu_fifo_pop_task : 
struct starpu_task *task;
				i = 0;
				for (task  = starpu_task_list_begin(&data->tache_pop);
					task != starpu_task_list_end(&data->tache_pop);
					task  = starpu_task_list_next(task))
				{ }

Supporter le fait que les tâches on des nombres de données variable et qu'il faut comparer tt les données entre elle
il faut donc intégrer au code des boucles pour supporter un nombre de paramètres variable et le fait que les tâches peuvent ne pas toutes avoir le même nombre de paramètres. 
Il faut aussi supporter le fait que les tâches peuvent ne pas être dans le même ordre (données 1 de la tache 1 à comparer avec toutes les données, pas seulement les données 1 de chaque tâche.

Gérer la taille max des paquets ca faut compter le poids de chaque donnée:
include/starpu_stdlib.h:starpu_ssize_t starpu_memory_get_total(unsigned node);
faut lui donner, STARPU_ASSERT(STARPU_SCHED_COMPONENT_IS_SINGLE_MEMORY_NODE(component))
unsigned memory_node  = starpu_worker_get_memory_node(starpu_bitmap_first(&component->workers_in_ctx));
ça s'assure qu'on ne gère qu'un nœud mémoire et tu le donnes ensuite à  starpu_memory_get_total
écris starpu_ssize_t dans ton code car windows n'a pas le type ssize_t

Comparer les taches et les paquets ensemble maintenant + si possible 

LIMIT_CUDA_MEM = 30*960*4 et on prend 1 quart de ca tester pour un grand nb de blocks : Même problème, crash apres tout les push

OK! / Comparer eager et dmdar : dans starpu-text/comparaisons.txt. Ca n'améliore pas.
