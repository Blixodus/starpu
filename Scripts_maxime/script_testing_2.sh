#!/usr/bin/bash
start=`date +%s`

make -j 100
N=3 ; TAILLE_TUILE=4096 ; STARPU_DISK_SWAP_BACKEND=unistd_o_direct STARPU_LIMIT_CPU_MEM=1000 STARPU_DISK_SWAP=/tmp CPU_ONLY=1 STARPU_NCUDA=0 DOPT_SELECTION_ORDER=4 CHOOSE_BEST_DATA_FROM=0 SIMULATE_MEMORY=0 CAN_A_DATA_BE_IN_MEM_AND_IN_NOT_USED_YET=0 PRIORITY_ATTRIBUTION=1 HIGHEST_PRIORITY_TASK_RETURNED_IN_DEFAULT_CASE=1 GRAPH_DESCENDANTS=0 PUSH_FREE_TASK_ON_GPU_WITH_LEAST_TASK_IN_PLANNED_TASK=2 STARPU_SCHED_READY=1 TASK_ORDER=2 DATA_ORDER=2 FREE_PUSHED_TASK_POSITION=1 DEPENDANCES=1 PRIO=1 APP=1 SEED=$((N/5)) EVICTION_STRATEGY_DYNAMIC_DATA_AWARE=1 STARPU_SCHED=dynamic-data-aware STARPU_NTASKS_THRESHOLD=$((10)) STARPU_CUDA_PIPELINE=$((5)) STARPU_MINIMUM_CLEAN_BUFFERS=0 STARPU_TARGET_CLEAN_BUFFERS=0 STARPU_NOPENCL=0 ./mpi/examples/mpi_lu/plu_outofcore_example_double -size $((TAILLE_TUILE*N)) -nblocks $((N))
exit

ulimit -S -s 5000000

N=0
NGPU=1
ORDO="dmdar"
CM=500
EVICTION=0
READY=1
TH=10
CP=5
HOST="gemini-1-fgcs"
SEED=1
PRINTF=0
BELADY=0
MULTI=0
STEALING=0
NITER=1
NB_TAILLE_TESTE=8

THRESHOLD_DMDAR=4000

FICHIER=Output_maxime/test.txt
truncate -s 0 ${FICHIER}

for ((i=1 ; i<=(($NB_TAILLE_TESTE)); i++))
	do
	N=$((5*i))
	DMDAR_THRESHOLD=$((THRESHOLD_DMDAR)) TASK_STEALING=$((STEALING)) STARPU_BUS_STATS=1 MULTIGPU=$((MULTI)) PRINTF=$((PRINTF)) SEED=$((SEED)) STARPU_SCHED=${ORDO} BELADY=$((BELADY)) ORDER_U=0 STARPU_SCHED_READY=$((READY)) STARPU_NTASKS_THRESHOLD=$((TH)) STARPU_CUDA_PIPELINE=$((CP)) STARPU_LIMIT_CUDA_MEM=$((CM)) STARPU_MINIMUM_CLEAN_BUFFERS=0 STARPU_TARGET_CLEAN_BUFFERS=0 STARPU_NCPU=0 STARPU_NCUDA=$((NGPU)) STARPU_NOPENCL=0 DATA_POP_POLICY=1 EVICTION_STRATEGY_DYNAMIC_DATA_AWARE=$((EVICTION)) ./examples/mult/sgemm -3d -xy $((960*N)) -nblocks $((N)) -nblocksz $((4)) -iter 1 | tail -n 1 >> ${FICHIER}
done

echo "Résultats pour" ${ORDO}
cat ${FICHIER}

end=`date +%s` 
runtime=$((end-start))
echo "Fin du script, l'execution a durée" $((runtime/60))" min "$((runtime%60))" sec."
